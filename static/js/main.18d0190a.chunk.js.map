{"version":3,"sources":["components/taskState.js","components/dummyAvatars.js","components/dummyTasks.js","components/dummyLists.js","components/ToggleViewButton.js","components/Header.js","components/Footer.js","components/About.js","components/Task.js","components/TasksLists.js","components/TasksGroups.js","components/AddTaskField.js","App.js","reportWebVitals.js","index.js"],"names":["taskState","COMPLETE","ACTIVE","Avatars","WOMAN","MAN1","MAN2","DOG","SHOPPING","dummyTasks","tasks","id","taskTitle","taskDescription","taskStatus","taskDate","tag","img","dummyLists","listID","todos","date","ToggleViewButton","color","text","onClick","style","backgroundColor","className","Header","title","onTaskAddView","onTaskAddViewFlag","location","useLocation","pathname","defaultProps","Footer","to","About","Task","task","onDelete","onEdit","onTaskStatusUpdate","useState","editingText","setEditingText","editTag","setEditTag","editDate","setEditDate","editDescription","setEditDescription","todoEditing","setTodoEditing","useEffect","type","onChange","e","target","checked","findCheckValue","Avatar","width","height","src","textAlign","fontSize","required","placeholder","value","disabled","selected","marginTop","display","justifyContent","textDecoration","todoStyle","stateColorStyle","cursor","marginLeft","TasksLists","tasksList","list","setList","undefined","moment","format","length","slice","map","todo","index","listId","TasksGroups","tasksLists","AddTaskField","onAddTask","setTitle","setDescription","setTaskStatus","setDate","setTag","onSubmit","preventDefault","alert","alignItems","App","taskAddView","setTaskAddView","setTasksLists","listTasks","setListTasks","shortid","generate","newTask","flag","entries","keys","push","createNewList","a","newList","updateLists","filter","onDeleteTask","swal","icon","buttons","dangerMode","then","res","onUpdateTasksLists","val","onEditTask","description","temp","Boolean","checkValue","updated","item","path","exact","render","props","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.18d0190a.chunk.js","sourcesContent":["\r\nconst taskState = {\r\n    COMPLETE: \"complete\",\r\n    ACTIVE: \"active\",\r\n}\r\n\r\nexport default taskState;","const Avatars = {\r\n\tWOMAN: \"https://media.glamour.com/photos/5a425fd3b6bcee68da9f86f8/master/pass/best-face-oil.png\",\r\n\tMAN1: \"https://m.media-amazon.com/images/M/MV5BMTM4OTkwNzg3NF5BMl5BanBnXkFtZTcwMjc5NjcyNw@@._V1_.jpg\",\r\n\tMAN2: \"https://www.austinchronicle.com/binary/49c8/Zakk_Wylde_blog.jpg\",\r\n    DOG: \"https://theawesomedaily.com/wp-content/uploads/2014/09/Beats-by-Dre-Studio1.jpg\",\r\n    SHOPPING: \"https://www.lux-review.com/wp-content/uploads/2020/12/grocery-shopping.jpg\"\r\n}\r\n\r\nexport default Avatars;","import taskState from \"./taskState\";\r\nimport Avatars from \"./dummyAvatars\";\r\n\r\nconst dummyTasks = {\r\n  tasks: [\r\n    {\r\n      id: 1,\r\n      taskTitle: \"Birthday gift for Nicole\",\r\n      taskDescription: \"Dont's forget to buy her a nice gift. Difficult task, right?\",\r\n      taskStatus: taskState.ACTIVE,\r\n      taskDate: \"2021-07-04\",\r\n      tag: \"Family\",\r\n      img: Avatars.WOMAN\r\n    },\r\n    {\r\n      id: 2,\r\n      taskTitle: \"Guitar class with James\",\r\n      taskDescription: \"Keep learning. Someday I'll be a rock star!\",\r\n      taskStatus: taskState.ACTIVE,\r\n      taskDate: \"2021-07-04\",\r\n      tag: \"Hobby\",\r\n      img:Avatars.MAN2\r\n    },\r\n    {\r\n      id: 3,\r\n      taskTitle: \"Send Mark the logo updates\",\r\n      taskDescription: \"This is the last iteration... hopefully\",\r\n      taskStatus: taskState.ACTIVE,\r\n      taskDate: \"2021-07-04\",\r\n      tag: \"Work\",\r\n      img: Avatars.MAN1\r\n    },\r\n    {\r\n      id: 4,\r\n      taskTitle: \"Get Max the cat to vet\",\r\n      taskDescription: \"Fast recovery\",\r\n      taskStatus: taskState.ACTIVE,\r\n      taskDate: \"2021-07-05\",\r\n      tag: \"Pets\",\r\n      img:Avatars.DOG\r\n    },\r\n    {\r\n      id: 5,\r\n      taskTitle: \"Go for groceries\",\r\n      taskDescription: \"Don't forget to buy beers\",\r\n      taskStatus: taskState.ACTIVE,\r\n      taskDate: \"2021-07-05\",\r\n      tag: \"Lifestyle\",\r\n      img:Avatars.SHOPPING\r\n    },\r\n  ],\r\n};\r\n\r\nexport default dummyTasks;\r\n","import dummyTasks from \"./dummyTasks\";\r\n\r\nconst dummyLists = [\r\n  {\r\n    listID: \"2021-07-04\",\r\n    todos: [dummyTasks.tasks[0], dummyTasks.tasks[1], dummyTasks.tasks[2]],\r\n    date: \"2021-07-04\",\r\n  },\r\n  {\r\n    listID: \"2021-07-05\",\r\n    todos: [dummyTasks.tasks[3], dummyTasks.tasks[4]],\r\n    date: \"2021-07-05\",\r\n  },\r\n];\r\n\r\nexport default dummyLists;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ToggleViewButton = ({color, text, onClick}) => {\r\n    return (\r\n     <button \r\n        onClick = {onClick}\r\n        style = {{backgroundColor: color}} \r\n        className = 'btn'>\r\n        {text}\r\n     </button>\r\n    \r\n     )\r\n}\r\n\r\n// Type system for Header's properties\r\nToggleViewButton.propTypes = {\r\n    color: PropTypes.string.isRequired,\r\n    text: PropTypes.string.isRequired,\r\n    onClick: PropTypes.func,\r\n}\r\n\r\nexport default ToggleViewButton;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ToggleViewButton from \"./ToggleViewButton\";\r\nimport {useLocation} from \"react-router-dom\"\r\n\r\nconst Header = ({title, onTaskAddView, onTaskAddViewFlag}) => {\r\n\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <header className=\"title-bar\">\r\n      <h1> {title} </h1>\r\n      {location.pathname === \"/\" && (\r\n      <ToggleViewButton\r\n          color={onTaskAddViewFlag ? \"blue\" : \"green\"}\r\n          text={onTaskAddViewFlag ? \"Show Tasks Lists\" : \"Add more Tasks\"}\r\n          onClick={onTaskAddView}\r\n      />\r\n      )}\r\n    </header>\r\n  );\r\n};\r\n\r\n// Default Header Title\r\nHeader.defaultProps = {\r\n  title: \"My To-Do List\",\r\n};\r\n\r\n// Type system for Header's properties\r\nHeader.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Header;\r\n","\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <p>Copyright &copy; 2021, \r\n        Author: Spyridon Manganas</p>\r\n        <Link to='/about'>About</Link>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer;","import { Link } from 'react-router-dom'\r\n\r\nconst About = () => {\r\n    return (\r\n      <div >\r\n        <h4>Version 0.0.1</h4>\r\n        <p>This To-Do App was developed as part of iReportSource interview process\r\n        </p>\r\n        <Link to='/'>Go Back</Link>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  export default About;","import React from 'react'\r\nimport { FaTimes, FaPen } from \"react-icons/fa\";\r\nimport { GrClose } from \"react-icons/gr\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Avatar } from '@material-ui/core'\r\nimport taskState from './taskState';\r\nimport Avatars from './dummyAvatars';\r\n\r\nconst Task = ({task, onDelete , onEdit, onTaskStatusUpdate}) => {\r\n\r\n    const [editingText, setEditingText] = useState(\"\");\r\n    const [editTag, setEditTag] = useState(\"\");\r\n    const [editDate, setEditDate] = useState(\"\");\r\n    const [editDescription, setEditDescription] = useState(\"\");\r\n    const [todoEditing, setTodoEditing] = useState(null);\r\n    \r\n    const findCheckValue = (e) => {\r\n        onTaskStatusUpdate(task.id, e?.target?.checked);\r\n      };\r\n\r\n    const stateColorStyle = () => {\r\n        switch (task?.taskStatus) {\r\n            case taskState.COMPLETE: //\"complete\":\r\n            return {\r\n                backgroundColor: \"#76B947\",\r\n            };\r\n            case taskState.ACTIVE://\"active\":\r\n            return {\r\n                backgroundColor: \"#338DFF\",\r\n            };\r\n            default:\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        if (todoEditing) {\r\n            setEditingText(task?.taskTitle);\r\n            setEditDate(task?.taskDate);\r\n            setEditTag(task?.tag);\r\n            setEditDescription(task?.taskDescription);\r\n        }\r\n        }, [todoEditing]);\r\n\r\n    const inEdit = (id) => {\r\n    // all value send to onEdit function in App.js\r\n    onEdit(task.id, editingText, editTag, editDate, editDescription);\r\n    setTodoEditing(null);\r\n    setEditingText(\"\");\r\n    }; \r\n\r\n    const todoStyle = () => {\r\n        switch (task?.taskStatus) {\r\n          case taskState.COMPLETE://\"complete\":\r\n            return {\r\n              textDecoration: \"line-through\",\r\n            };\r\n          case taskState.ACTIVE://\"active\":\r\n            return {\r\n            };\r\n          default:\r\n        }\r\n    };\r\n\r\n\r\n  return (\r\n        <div className = \"task\">\r\n          <input\r\n                type=\"checkbox\"\r\n                className=\"Checkbox\"\r\n                onChange={(e) => findCheckValue(e)}\r\n          />\r\n\r\n          <div>\r\n            <span>\r\n                <Avatar\r\n                    style={{ width: \"55px\", height: \"55px\" }}\r\n                    className=\"table_avatar\"\r\n                    src= {task.img}\r\n                />\r\n            </span>\r\n          </div>\r\n\r\n          <div className=\"taskFlexContainer\">\r\n             {todoEditing === task?.id ? (\r\n              // modal desgin\r\n             <div className=\"modalBack\">\r\n                 <div className=\"modalInner\">\r\n                    <div\r\n                        onClick={() => setTodoEditing(null)}\r\n                        style={{\r\n                        textAlign: \"right\",\r\n                        width: \"100%\",\r\n                        fontSize: \"12px\",\r\n                        }}\r\n                    >\r\n                        {/* close button */}\r\n                        <GrClose />\r\n                    </div>\r\n                    <div className=\"form-control\">\r\n                        <label> Task </label>\r\n                        <input\r\n                            required\r\n                            type=\"text\"\r\n                            placeholder=\"Add Task\"\r\n                        //maxlengrh set\r\n                        // value set in state and value in next line\r\n                            onChange={(e) => setEditingText(e.target.value)}\r\n                            value={editingText}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-control\">\r\n                        <label> Task Description </label>\r\n                        <input\r\n                            required\r\n                            type=\"text\"\r\n                            placeholder=\"Add a brief description ...\"\r\n                        // value set in state and value in next line\r\n                            onChange={(e) => setEditDescription(e.target.value)}\r\n                            value={editDescription}\r\n                        />\r\n                    </div>\r\n              \r\n                    <div className=\"form-control\">\r\n                        <label>Tags </label>\r\n                        <select\r\n                            required\r\n                            type=\"text\"\r\n                            placeholder=\"Add Tag\"\r\n                            // value set in state and value in next line\r\n                            value={editTag}\r\n                            onChange={(e) => setEditTag(e.target.value)}\r\n                         >\r\n                            <option value=\"\" disabled selected>\r\n                            Select Tags\r\n                            </option>\r\n                            <option value=\"Hobby\">Hobby</option>\r\n                            <option value=\"Work\">Work</option>\r\n                            <option value=\"Games\">Games</option>\r\n                            <option value=\"Pets\">Pets</option>\r\n                            <option value=\"Lifestyle\">Lifestyle</option>\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div className=\"form-control\">\r\n                        <label>Set Date </label>\r\n                        <input\r\n                            type=\"date\"\r\n                            value={editDate}\r\n                            onChange={(e) => setEditDate(e.target.value)}\r\n                        />\r\n                    </div>\r\n              \r\n                    <div className=\"group-submit\"\r\n                        style={{marginTop: \"30px\", display: \"flex\", justifyContent: \"flex-end\"}}\r\n                    >\r\n                        <button className=\"btnStyle\" onClick={() => inEdit(task.id)}>\r\n                        Submit Edit\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n          </div>\r\n            ) : (\r\n            <span className=\"TodoTask\" style={todoStyle()}>\r\n                {task?.taskTitle}\r\n            </span>\r\n            )}\r\n            <p className=\"TodoDescription\"> {task.taskDescription} </p>\r\n      </div>  \r\n\r\n      {todoEditing === task.id ? (\r\n        \"\"\r\n      ) : (\r\n        <div className=\"taskStateContainer\">\r\n          <span className=\"TodoState\" style={stateColorStyle()}>\r\n            {task.taskStatus}\r\n          </span>\r\n          <span className=\"TodoState tags\">{task?.tag}</span>\r\n          <FaTimes\r\n            style={{ color: \"red\", cursor: \"pointer\", marginLeft: 10 }}\r\n            onClick={() => onDelete(task.id)}\r\n          />\r\n          <FaPen\r\n            style={{ color: \"green\", cursor: \"pointer\", marginLeft: 10 }}\r\n            onClick={() => setTodoEditing(task.id)}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n        \r\n    )\r\n}\r\nexport default Task;\r\n","import React from \"react\";\r\nimport Task from \"./Task\";\r\nimport { useState } from \"react\";\r\nimport moment from \"moment\";\r\n\r\nconst TasksLists = ({\r\n  tasksList,\r\n  onDelete,\r\n  onEdit,\r\n  onTaskStatusUpdate,\r\n  }) => {\r\n  \r\n  const [list, setList] = useState(3);\r\n\r\nconst Message = (todos) => {\r\n\r\n  if (todos.length === 1) {\r\n      return  (<h2 style ={{textAlign:\"center\"}}>\r\n                 Not too much to handle today. Relax :) </h2>) \r\n               \r\n  }\r\n  else if (todos.length >= 3) {\r\n    return (<h2 style ={{textAlign:\"center\"}}>\r\n              It'll be a quite busy day. Stay efficient! </h2>)  \r\n            \r\n  }\r\n  else{ return (<h2 style ={{textAlign:\"center\"}}>\r\n                  Let's finish some tasks </h2>) }\r\n}\r\n\r\nreturn (\r\n    <div>\r\n      <header className=\"header\">\r\n        <h1>\r\n          {tasksList?.date === undefined ? null : (\r\n            <> {moment(tasksList?.date).format(\"DD, MMM\")}</>\r\n          )}\r\n        </h1>\r\n\r\n      </header>\r\n       \r\n       {(tasksList.todos && tasksList.todos.length) && Message(tasksList.todos)} \r\n   \r\n      {tasksList?.todos?.slice(0, list).map((todo, index, id) => (\r\n          \r\n        <>  \r\n          <Task\r\n            key={index}\r\n            task={todo}\r\n            listId={id}\r\n            onDelete={onDelete}\r\n            onEdit={onEdit}\r\n            onTaskStatusUpdate={onTaskStatusUpdate}\r\n          />\r\n\r\n          {tasksList?.todos?.length > 3 ? (\r\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n\r\n              {index + 1 === list ? (\r\n                <>\r\n                {list > 3 ? (\r\n                    <>\r\n                      {/* when useR click on show less button the value of list set again to 3  */}\r\n                      <button className=\"btnStyle\" onClick={() => setList(3)}>\r\n                        Show Less\r\n                      </button>\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      {/* when use click on show more button the value of list set length of todos  */}\r\n\r\n                      <button\r\n                        className=\"btnStyle\"\r\n                        onClick={() => setList(tasksList?.todos?.length)}\r\n                      >\r\n                        Show More\r\n                      </button>\r\n                    </>\r\n                  )}\r\n                  </>\r\n              ): (\r\n                \"\"\r\n              )}\r\n            </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </>\r\n        ))}\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default TasksLists;\r\n","import React from \"react\";\r\nimport TasksLists from \"./TasksLists\";\r\n\r\nconst TasksGroups = ({\r\n    tasksLists,\r\n    onDelete,\r\n    onEdit,\r\n    onTaskStatusUpdate,\r\n  }) => {\r\n\r\n  return (\r\n    <>\r\n        {tasksLists?.map((tasksList, index) => (\r\n         <TasksLists\r\n                key={index}\r\n                tasksList={tasksList} \r\n                onDelete={onDelete}\r\n                onEdit = {onEdit}\r\n                onTaskStatusUpdate={onTaskStatusUpdate}\r\n              \r\n            /> \r\n        ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TasksGroups;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport taskState from \"./taskState\";\r\n\r\n\r\nconst AddTaskField = ({ onAddTask }) => {\r\n\r\n  const [taskTitle, setTitle] = useState(\"\");\r\n  const [taskDescription, setDescription] = useState(\"\");\r\n  const [taskStatus, setTaskStatus] = useState(\"active\");\r\n  const [taskDate, setDate] = useState(\"\");\r\n  const [tag, setTag] = useState(\"\");\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!taskTitle) {\r\n      alert(\"Please type a title for your new task\");\r\n      return;\r\n    }\r\n\r\n    setTaskStatus(taskState.ACTIVE);\r\n    onAddTask({\r\n      taskTitle,\r\n      taskDescription,\r\n      taskDate,\r\n      taskStatus,\r\n      tag,\r\n    });\r\n    \r\n    setTitle(\"\");\r\n    setDescription(\"\");\r\n    setDate(\"\");\r\n    setTaskStatus(taskState.ACTIVE);\r\n\r\n  };\r\n\r\n  return (\r\n    <form className=\"add-form\" onSubmit={onSubmit}>\r\n      <div className=\"form-control\">\r\n        <label> Task </label>\r\n        <input\r\n          required\r\n          type=\"text\"\r\n          placeholder=\"Add a title for your task ...\"\r\n          value={taskTitle}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"form-control\">\r\n        <label> Task Description </label>\r\n        <input\r\n          required\r\n          type=\"text\"\r\n          placeholder=\"Add a brief description ...\"\r\n          value={taskDescription}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n        />\r\n      </div>\r\n      \r\n      <div style={{ width: \"40%\" }} className=\"form-control\">\r\n        <label> Tags </label>\r\n        <select\r\n          required\r\n          type=\"text\"\r\n          placeholder=\"Add a Tag\"\r\n          value={tag}\r\n          onChange={(e) => setTag(e.target.value)}\r\n        >\r\n          <option value=\"\" disabled selected>\r\n            Choose a Tag\r\n          </option>\r\n          <option value=\"Hobby\">Hobby</option>\r\n          <option value=\"Games\">Games</option>\r\n          <option value=\"Family\">Family</option>\r\n          <option value=\"Work\">Work</option>\r\n          <option value=\"Pets\">Pets</option>\r\n          <option value=\"Lifestyle\">Lifestyle</option>\r\n        </select>\r\n      </div>\r\n      \r\n      <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n        <div className=\"form-control\" style={{ width: \"40%\" }}>\r\n          <label>Select a Date </label>\r\n          <input\r\n            className=\"dateinput\"\r\n            type=\"date\"\r\n            value={taskDate}\r\n            onChange={(e) => setDate(e.target.value)}\r\n          />\r\n        </div>\r\n\r\n      </div>\r\n      <div className=\"submitbtn\" id=\"submitbtn\">\r\n        <input type=\"submit\" value=\"Submit Task\" className=\"btn\" />\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddTaskField;\r\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport dummyLists from \"./components/dummyLists\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport About from \"./components/About\";\nimport taskState from \"./components/taskState\";\nimport TasksGroups from \"./components/TasksGroups\";\nimport AddTaskField from \"./components/AddTaskField\";\nimport shortid from \"shortid\";\nimport swal from \"sweetalert\";\nimport { blue, purple } from \"@material-ui/core/colors\";\n\nconst App = () => {\n\n  const [taskAddView, setTaskAddView] = useState(false);\n  const [tasksLists, setTasksLists] = useState(dummyLists);\n  const [listTasks, setListTasks] = useState([]);\n\n\n  // ================== Methods ==========================\n  \n  /***  onAddTask: Add a new task to a list ***/\n  \n  const onAddTask = (task) => {\n    const id = shortid.generate();\n    const newTask = { id, ...task };\n    \n    var flag = false;\n    for (const [keys, _] of tasksLists.entries()) {\n      if (tasksLists[keys].date === task.taskDate) {\n        flag = true;\n        tasksLists[keys].todos.push(newTask);\n        setTasksLists(tasksLists);\n        const task = tasksLists;\n        setTasksLists([]);\n        setTasksLists(task);\n        setTasksLists((e) => [...e, task]);\n      }\n    }\n\n    // create a new list and add the task \n    if (flag === false) {\n      createNewList(newTask);\n    }\n  };\n\n  /***  createNewList: Generates a list ***/\n  const createNewList = async (task) => {\n    const id = task.taskDate;\n    const todos = [task];\n    const date = task.taskDate;\n    const newList = { id, todos, date };\n    const updateLists = tasksLists?.filter((list) => list?.todos?.length !== 0);\n    updateLists.push(newList);\n    await setTasksLists((e) => []);\n    setTasksLists((e) => [...updateLists]);\n  };\n\n\n  /***  onDeleteTask: Remove a task from a list ***/\n \n  const onDeleteTask = (id) => {\n\n    swal({\n      title: \"Are you sure?\",\n      text: \"You are about to remove a task from your list\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode:true\n    }).then(res => {if(res){\n      setListTasks((e) => e.filter((task) => task.id !== id));\n      onUpdateTasksLists(id, listTasks);}\n    })\n\n    // setListTasks((e) => e.filter((task) => task.id !== id));\n    // onUpdateTasksLists(id, listTasks);\n  };\n\n  const onUpdateTasksLists = (id, todos) => {\n    const updateLists = tasksLists.map((list) => {\n      list.todos = list?.todos?.filter((val) => val.id !== id);\n      return list;\n    });\n    \n    const newList = updateLists?.filter((list) => list?.todos?.length !== 0);\n    setTasksLists((e) => [...newList]);\n  };\n\n\n/***  onEditTask: Update the task's content ***/\n\nconst onEditTask = (id, editingText, tag, date, description) => {\n  //here i pass tag data and description\n  let temp = null;\n  const updateLists = tasksLists?.map((list) => {\n    list.todos = list.todos\n      ?.map((val) => {\n        if (val?.id === id) {\n          //here i check the date\n          val.taskTitle = editingText;\n          val.taskDescription = description;\n          val.taskDate = date;\n          val.tag = tag;\n          if (date !== list.date) {\n            temp = val;\n            return null;\n          } \n        }\n        return val;\n      })\n      .filter(Boolean);\n\n    return list;\n  });\n\n  if (temp) {\n    // here i add  the task if  the date is not same\n    onAddTask(temp);\n  }\n\n  //here i filter the array\n  const newList = updateLists?.filter((list) => list?.todos?.length !== 0);\n  //here i set the task list\n  setTasksLists((e) => [...newList]);\n};\n\n\n/***  onTaskStatusUpdate: Update the task's completion status ***/\n\n  const onTaskStatusUpdate = (id, checkValue) => {\n    const updated = tasksLists?.map((item) => {\n      item?.todos?.map((task) => {\n\n        if (task.id === id) {\n          if (checkValue) {\n            task.taskState = taskState.COMPLETE //\"complete\";\n          } else {\n            task.taskState = taskState.ACTIVE //\"active\";\n          }\n        }\n        return task;\n      });\n      return item;\n    });\n    setTasksLists((e) => [...updated]);\n  };\n\n\n// ********** App main body ***************************\nreturn (\n  <Router>\n    <div className=\"container\">\n      <Header\n        title=\"My ToDo List\"\n        onTaskAddView={() => setTaskAddView(!taskAddView)}\n        onTaskAddViewFlag={taskAddView}\n      />\n      <Route\n        path=\"/\"\n        exact\n        render={(props) => (\n          <>\n            {taskAddView && <AddTaskField onAddTask={onAddTask} />}\n            {tasksLists.length>0 ? (\n            <TasksGroups\n              tasksLists={tasksLists}\n              onDelete={onDeleteTask}\n              onEdit={onEditTask}\n              onTaskStatusUpdate={onTaskStatusUpdate}\n            />\n         \n          ) : ( <h2 style={{textAlign: \"center\"}}>No tasks to show</h2>)}\n         </>\n      )}\n      />\n      <Route path=\"/about\" component={About} />\n      <Footer />\n    </div>\n  </Router>\n);\n};\n\nexport default App;\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter as Router} from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}